version: '3.8'

services:
  mariadb:
    image: mariadb:latest
    container_name: innoserve_mariadb
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./nodejs_app/model/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - rag_network
    restart: unless-stopped

  app:
    container_name: nodejs_backend
    build: ./nodejs_app
    ports:
      - "3000:3000"
    volumes:
      - ./nodejs_app:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      RAG_SERVICE_URL: ${RAG_SERVICE_URL}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - mariadb
      - rag_api
    networks:
      - rag_network
    restart: unless-stopped

  rag_api:
    container_name: python_rag_api
    build: ./python_rag_service
    ports:
      - "5001:5001"
    volumes:
      - ./python_rag_service:/usr/src/app
      - chroma_data:/data
    environment:
      JWT_ALGORITHM: ${JWT_ALGORITHM}
      JWT_SECRET: ${JWT_SECRET}
      GOOGLE_CSE_ID: ${GOOGLE_CSE_ID}
      GOOGLE_SEARCH_API_KEY: ${GOOGLE_SEARCH_API_KEY}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
    networks:
      - rag_network
    restart: unless-stopped

networks:
  rag_network:
    driver: bridge

volumes:
  mariadb_data:
  chroma_data: